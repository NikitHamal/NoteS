// Generated by view binder compiler. Do not edit!
package com.notex.create.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.notex.create.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final LinearLayout contentContainer;

  @NonNull
  public final ImageView emptyNotebooksIcon;

  @NonNull
  public final TextView emptyNotebooksSubtitle;

  @NonNull
  public final TextView emptyNotebooksTitle;

  @NonNull
  public final LinearLayout emptyNotebooksView;

  @NonNull
  public final ImageView emptyNotesIcon;

  @NonNull
  public final TextView emptyNotesSubtitle;

  @NonNull
  public final TextView emptyNotesTitle;

  @NonNull
  public final LinearLayout emptyNotesView;

  @NonNull
  public final FloatingActionButton fabAdd;

  @NonNull
  public final ImageView menuButton;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final LinearLayout notebooksContainer;

  @NonNull
  public final TextView notebooksTitle;

  @NonNull
  public final LinearLayout notesContainer;

  @NonNull
  public final TextView notesTitle;

  @NonNull
  public final LinearLayout searchContainer;

  @NonNull
  public final EditText searchEdit;

  @NonNull
  public final ImageView searchIcon;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView toolbarTitle;

  private MainBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appBarLayout,
      @NonNull LinearLayout contentContainer, @NonNull ImageView emptyNotebooksIcon,
      @NonNull TextView emptyNotebooksSubtitle, @NonNull TextView emptyNotebooksTitle,
      @NonNull LinearLayout emptyNotebooksView, @NonNull ImageView emptyNotesIcon,
      @NonNull TextView emptyNotesSubtitle, @NonNull TextView emptyNotesTitle,
      @NonNull LinearLayout emptyNotesView, @NonNull FloatingActionButton fabAdd,
      @NonNull ImageView menuButton, @NonNull NestedScrollView nestedScrollView,
      @NonNull LinearLayout notebooksContainer, @NonNull TextView notebooksTitle,
      @NonNull LinearLayout notesContainer, @NonNull TextView notesTitle,
      @NonNull LinearLayout searchContainer, @NonNull EditText searchEdit,
      @NonNull ImageView searchIcon, @NonNull MaterialToolbar toolbar,
      @NonNull TextView toolbarTitle) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.contentContainer = contentContainer;
    this.emptyNotebooksIcon = emptyNotebooksIcon;
    this.emptyNotebooksSubtitle = emptyNotebooksSubtitle;
    this.emptyNotebooksTitle = emptyNotebooksTitle;
    this.emptyNotebooksView = emptyNotebooksView;
    this.emptyNotesIcon = emptyNotesIcon;
    this.emptyNotesSubtitle = emptyNotesSubtitle;
    this.emptyNotesTitle = emptyNotesTitle;
    this.emptyNotesView = emptyNotesView;
    this.fabAdd = fabAdd;
    this.menuButton = menuButton;
    this.nestedScrollView = nestedScrollView;
    this.notebooksContainer = notebooksContainer;
    this.notebooksTitle = notebooksTitle;
    this.notesContainer = notesContainer;
    this.notesTitle = notesTitle;
    this.searchContainer = searchContainer;
    this.searchEdit = searchEdit;
    this.searchIcon = searchIcon;
    this.toolbar = toolbar;
    this.toolbarTitle = toolbarTitle;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.content_container;
      LinearLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.empty_notebooks_icon;
      ImageView emptyNotebooksIcon = ViewBindings.findChildViewById(rootView, id);
      if (emptyNotebooksIcon == null) {
        break missingId;
      }

      id = R.id.empty_notebooks_subtitle;
      TextView emptyNotebooksSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (emptyNotebooksSubtitle == null) {
        break missingId;
      }

      id = R.id.empty_notebooks_title;
      TextView emptyNotebooksTitle = ViewBindings.findChildViewById(rootView, id);
      if (emptyNotebooksTitle == null) {
        break missingId;
      }

      id = R.id.empty_notebooks_view;
      LinearLayout emptyNotebooksView = ViewBindings.findChildViewById(rootView, id);
      if (emptyNotebooksView == null) {
        break missingId;
      }

      id = R.id.empty_notes_icon;
      ImageView emptyNotesIcon = ViewBindings.findChildViewById(rootView, id);
      if (emptyNotesIcon == null) {
        break missingId;
      }

      id = R.id.empty_notes_subtitle;
      TextView emptyNotesSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (emptyNotesSubtitle == null) {
        break missingId;
      }

      id = R.id.empty_notes_title;
      TextView emptyNotesTitle = ViewBindings.findChildViewById(rootView, id);
      if (emptyNotesTitle == null) {
        break missingId;
      }

      id = R.id.empty_notes_view;
      LinearLayout emptyNotesView = ViewBindings.findChildViewById(rootView, id);
      if (emptyNotesView == null) {
        break missingId;
      }

      id = R.id.fab_add;
      FloatingActionButton fabAdd = ViewBindings.findChildViewById(rootView, id);
      if (fabAdd == null) {
        break missingId;
      }

      id = R.id.menu_button;
      ImageView menuButton = ViewBindings.findChildViewById(rootView, id);
      if (menuButton == null) {
        break missingId;
      }

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.notebooks_container;
      LinearLayout notebooksContainer = ViewBindings.findChildViewById(rootView, id);
      if (notebooksContainer == null) {
        break missingId;
      }

      id = R.id.notebooks_title;
      TextView notebooksTitle = ViewBindings.findChildViewById(rootView, id);
      if (notebooksTitle == null) {
        break missingId;
      }

      id = R.id.notes_container;
      LinearLayout notesContainer = ViewBindings.findChildViewById(rootView, id);
      if (notesContainer == null) {
        break missingId;
      }

      id = R.id.notes_title;
      TextView notesTitle = ViewBindings.findChildViewById(rootView, id);
      if (notesTitle == null) {
        break missingId;
      }

      id = R.id.search_container;
      LinearLayout searchContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchContainer == null) {
        break missingId;
      }

      id = R.id.search_edit;
      EditText searchEdit = ViewBindings.findChildViewById(rootView, id);
      if (searchEdit == null) {
        break missingId;
      }

      id = R.id.search_icon;
      ImageView searchIcon = ViewBindings.findChildViewById(rootView, id);
      if (searchIcon == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitle == null) {
        break missingId;
      }

      return new MainBinding((CoordinatorLayout) rootView, appBarLayout, contentContainer,
          emptyNotebooksIcon, emptyNotebooksSubtitle, emptyNotebooksTitle, emptyNotebooksView,
          emptyNotesIcon, emptyNotesSubtitle, emptyNotesTitle, emptyNotesView, fabAdd, menuButton,
          nestedScrollView, notebooksContainer, notebooksTitle, notesContainer, notesTitle,
          searchContainer, searchEdit, searchIcon, toolbar, toolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
