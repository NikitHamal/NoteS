// Generated by view binder compiler. Do not edit!
package com.notex.create.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.notex.create.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final LinearLayout contentContainer;

  @NonNull
  public final TextInputEditText contentEdit;

  @NonNull
  public final TextInputLayout contentInputLayout;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final AutoCompleteTextView notebookDropdown;

  @NonNull
  public final TextInputLayout notebookInputLayout;

  @NonNull
  public final ImageView saveButton;

  @NonNull
  public final TextInputEditText titleEdit;

  @NonNull
  public final TextInputLayout titleInputLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView toolbarTitle;

  private EditBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appBarLayout,
      @NonNull ImageView backButton, @NonNull LinearLayout contentContainer,
      @NonNull TextInputEditText contentEdit, @NonNull TextInputLayout contentInputLayout,
      @NonNull NestedScrollView nestedScrollView, @NonNull AutoCompleteTextView notebookDropdown,
      @NonNull TextInputLayout notebookInputLayout, @NonNull ImageView saveButton,
      @NonNull TextInputEditText titleEdit, @NonNull TextInputLayout titleInputLayout,
      @NonNull MaterialToolbar toolbar, @NonNull TextView toolbarTitle) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.backButton = backButton;
    this.contentContainer = contentContainer;
    this.contentEdit = contentEdit;
    this.contentInputLayout = contentInputLayout;
    this.nestedScrollView = nestedScrollView;
    this.notebookDropdown = notebookDropdown;
    this.notebookInputLayout = notebookInputLayout;
    this.saveButton = saveButton;
    this.titleEdit = titleEdit;
    this.titleInputLayout = titleInputLayout;
    this.toolbar = toolbar;
    this.toolbarTitle = toolbarTitle;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.back_button;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.content_container;
      LinearLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.content_edit;
      TextInputEditText contentEdit = ViewBindings.findChildViewById(rootView, id);
      if (contentEdit == null) {
        break missingId;
      }

      id = R.id.content_input_layout;
      TextInputLayout contentInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentInputLayout == null) {
        break missingId;
      }

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.notebook_dropdown;
      AutoCompleteTextView notebookDropdown = ViewBindings.findChildViewById(rootView, id);
      if (notebookDropdown == null) {
        break missingId;
      }

      id = R.id.notebook_input_layout;
      TextInputLayout notebookInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (notebookInputLayout == null) {
        break missingId;
      }

      id = R.id.save_button;
      ImageView saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.title_edit;
      TextInputEditText titleEdit = ViewBindings.findChildViewById(rootView, id);
      if (titleEdit == null) {
        break missingId;
      }

      id = R.id.title_input_layout;
      TextInputLayout titleInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleInputLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitle == null) {
        break missingId;
      }

      return new EditBinding((CoordinatorLayout) rootView, appBarLayout, backButton,
          contentContainer, contentEdit, contentInputLayout, nestedScrollView, notebookDropdown,
          notebookInputLayout, saveButton, titleEdit, titleInputLayout, toolbar, toolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
